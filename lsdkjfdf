once it was a sure win for goat, it had formed one inaccessible zone without losing any pieces in the placement phase
but i proceeded to willingly sacrifice two goats and ended up forfeiting a sure win. whyy?
I've been trying to diagnose this problem since yesterday

is this a fault of evaluation?
or was the goat trying to win early? that makes no sense tho!!

for tigers it's curious that while it was possible to create immediate capture opportunity, the tiger favored creating a stronger formation. it eventually won but is this good gameplay?


Need to try to strip everything away first then gradually build up the features.
I'll try something with just plain negamax + iterative deepening + static score move ordering.

Then add transposition_tables, qsearch and killer moves later.

I need to make sure that the agent is not making superfluous sacrifices.

I've fixed the above problem partially by tuning the evaluation and move ordering parameters. It's interesting that after tuning the parameters, the search become more efficient

Tests:
[x] Move Picking
[x] Move Ordering

During Gameplay
 > Depth 1 complete. Best move: (4, 4). Time: 0.00s. Total nodes: 11
 > Depth 2 complete. Best move: (4, 4). Time: 0.00s. Total nodes: 29
 > Depth 3 complete. Best move: (4, 4). Time: 0.00s. Total nodes: 171
 > Depth 4 complete. Best move: (23, 23). Time: 0.02s. Total nodes: 678
 > Depth 5 complete. Best move: (23, 23). Time: 0.06s. Total nodes: 1783
 > Depth 6 complete. Best move: (6, 6). Time: 0.76s. Total nodes: 31999
 > Timeout occurred at depth 7. Total nodes: 9216. Using best move from depth 6
 > Best move: (6, 6).

As initial config
 > Depth 1 complete. Best move: (4, 4). Time: 0.17s. Total nodes: 11
 > Depth 2 complete. Best move: (4, 4). Time: 0.34s. Total nodes: 29
 > Depth 3 complete. Best move: (4, 4). Time: 0.34s. Total nodes: 171
 > Depth 4 complete. Best move: (23, 23). Time: 0.36s. Total nodes: 678
 > Depth 5 complete. Best move: (23, 23). Time: 0.40s. Total nodes: 1783
 > Timeout occurred at depth 6. Total nodes: 28672. Using best move from depth 5
 > Best move: (23, 23).

 The problem doesnot seem to be move ordering so what is it? lemme check if it's the alpha beta window

 hmm doesnot seem like it.

 the problem seems to be the hashed move? like at the root node, hashed move gets a high evaluation and despite being a sacrificial move ends up at the top of the list. the question why is this sacrifical move causing a cutoff?? is there a perspective issue somewhere when negamax is called??

 these moves tend to be stored in the TT with exact flag, so my doubt that they are the values that raise alpha while not exceeding beta is correct. now how do we conceptualize this behaviour??

 i've also observed that poor sacrificial moves and hashed move don't always conincide. so this too points to the idea that something weird is going on with the alpha beta search


exact_flag, alpha_flag, beta_flag = 0, 1, 2
